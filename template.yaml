AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: Middleware to connect with Klavi.

Parameters:
  ProjectName:
    Description: Project Name
    Type: String
    Default: Klavi

  Environment:
    Description: Execution environment for the service
    Type: String
    AllowedValues:
      - dev
      - test
      - staging
      - prod
      - refactoring
    Default: staging

Globals:
  Function:
    Runtime: python3.8
    MemorySize: 1024
    Timeout: 120
    Environment:
      Variables:
        ENV: !Ref Environment
        LOGGING_LEVEL: DEBUG
    Tags:
      Project: !Ref ProjectName
      Environment: !Ref Environment
  Api:
    Cors:
      AllowMethods: "'*'"
      AllowHeaders: "'Authorization,Content-Type,If-Match'"
      AllowOrigin: "'*'"
    Variables:
      Environment: !Ref Environment

Conditions:
  Prod: !Equals [!Ref Environment, prod]

Resources:
  #Aqui eu estou configurando um novo dominio customizado para o api gateway. No caso midklavi-staging.pontte.com.br
  # APIDOMAIN NAME é CLOUDFormation
  APIDomainName:
    Type: 'AWS::ApiGateway::DomainName'
    Properties:
      DomainName: !If [ Prod, 'midklavi.pontte.com.br', !Sub 'midklavi-${Environment}.pontte.com.br' ]
      CertificateArn: 'arn:aws:acm:us-east-1:848638426587:certificate/639f5ab2-c77a-4f62-8250-c85716a6753f'

  # Cria uma coleção de recursos do api gateway
  # SERVELESS::API é SAM
  KlaviApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Environment
      Name: !Sub "KlaviApi-${Environment}"
      Variables:
        ENV: !Ref Environment

  # Cria uma base path para a nossa api gateway
  # CLOUD FORMATION
  KlaviApiMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      DomainName: !Ref APIDomainName
      RestApiId: !Ref KlaviApi
      Stage: !Ref KlaviApi.Stage
      BasePath: "api"

  # Cria uma lambda e conecta a um evento de entrada
  # SAM
  MidKlaviFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'MidKlavi-EventLoggerFn-${Environment}'
      CodeUri: src/mid_klavi/
      Handler: app.lambda_handler
      Events:
        CreateApi:
          Type: Api
          Properties:
            RestApiId: !Ref KlaviApi
            Path: "/create"
            Method: POST
      Environment:
        Variables:
          TABLE_NAME: !Ref EventLoggerTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref EventLoggerTable

  EventLoggerTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      TableName: !Sub 'MidKlavi-EventLogger-${Environment}'
