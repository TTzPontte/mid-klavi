AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: Middleware to connect with Klavi.

Parameters:
  ProjectName:
    Description: Project Name
    Type: String
    Default: Klavi

  Environment:
    Description: Execution environment for the service
    Type: String
    AllowedValues:
      - dev
      - test
      - staging
      - prod
      - refactoring

Globals:
  Function:
    Runtime: python3.8
    MemorySize: 1024
    Timeout: 120
    Environment:
      Variables:
        ENV: !Ref Environment
        LOGGING_LEVEL: DEBUG
    Tags:
      Project: !Ref ProjectName
      Environment: !Ref Environment
  Api:
    Cors:
      AllowMethods: "'*'"
      AllowHeaders: "'Authorization,Content-Type,If-Match'"
      AllowOrigin: "'*'"
    Variables:
      Environment: !Ref Environment

Conditions:
  Prod: !Equals [ !Ref Environment, prod ]

Resources:
  # Dom√≠nio para o API Gateway
  APIDomainName:
    Type: "AWS::ApiGateway::DomainName"
    Properties:
      DomainName: !Sub "api-klavi${Environment}.pontte.com.br"
      CertificateArn: "arn:aws:acm:us-east-1:848638426587:certificate/639f5ab2-c77a-4f62-8250-c85716a6753f"

  # Acessos para log
  CloudWatchRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "apigateway.amazonaws.com"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"

  ApiGatewayAccount:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn: !GetAtt CloudWatchRole.Arn

  KlaviApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "KlaviApi-${Environment}"
      StageName: !Ref Environment

  KlaviApiMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      BasePath: "KlaviApiMapping"
      DomainName: !Ref APIDomainName
      RestApiId: !Ref KlaviApi
      Stage: !Ref KlaviApi.Stage

  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: HelloWorldFn
      Tracing: Active
      CodeUri: src/hello_world/
      Handler: app.lambda_handler
      Events:
        api1:
          Type: Api
          Properties:
            RestApiId: !Ref KlaviApi
            Path: /hello
            Method: GET




